import{_ as a}from"./chunks/1011191502-1.6d36e32b.js";import{_ as e,o as t,c,Q as o}from"./chunks/framework.91000686.js";const s="/data_structure/assets/10111a313-0.801a4285.gif",T=JSON.parse('{"title":"广义表的头尾链表存储表示","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"array/0005.md","filePath":"array/0005.md"}'),r={name:"array/0005.md"},d=o('<h1 id="广义表的头尾链表存储表示" tabindex="-1">广义表的头尾链表存储表示 <a class="header-anchor" href="#广义表的头尾链表存储表示" aria-label="Permalink to &quot;广义表的头尾链表存储表示&quot;">​</a></h1><p>广义表（Generalized Table）是一种数据结构，它可以表示任何二维表，包括二进制表、三角表、矩阵、树形表、图表等。广义表的特点是可以表示任何二维表，并且广义表的表示方法与具体的二维表无关。</p><p>我们可以创建一个整形数组去存储<code>{1,2,3}</code>，我们也可以创建一个二维整形数组去存储<span><code>{{1,2,3},{4,5,6}}</code></span>，但数组不适合用来存储类似<span><code>{1,{1,2,3}}</code></span>这样的数据。</p><p>广义表的两种结点：原子结点用来存储数据，表结点用了存储表结点或原子结点</p><p><img src="'+s+'" alt="广义表节点的两种类型"></p><p>广义表<code>(a,(b,c,d))</code>：原子 a 和子表 (b,c,d) 构成，而子表 (b,c,d) 又是由原子 b、c 和 d 构成</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>对于 (a,(b,c,d)) 来说，原子 a 和子表 (b,c,d) 是并列的，而在子表 (b,c,d) 中原子 b、c、d 是并列的。</p></div><p><img src="'+a+'" alt="广义表 {a,{b,c,d}} 的结构示意图"></p>',8),p=[d];function _(i,n,l,m,b,f){return t(),c("div",null,p)}const k=e(r,[["render",_]]);export{T as __pageData,k as default};
