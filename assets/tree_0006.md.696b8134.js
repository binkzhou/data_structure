import{_ as s,o as a,c as o,k as e,a as t}from"./chunks/framework.91000686.js";const r="/data_structure/assets/1119415Y7-0.a3f3902e.gif",n="/data_structure/assets/111941N20-1.1734b378.gif",b=JSON.parse('{"title":"树的双亲表存储表示","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"tree/0006.md","filePath":"tree/0006.md"}'),c={name:"tree/0006.md"},_=e("h1",{id:"树的双亲表存储表示",tabindex:"-1"},[t("树的双亲表存储表示 "),e("a",{class:"header-anchor",href:"#树的双亲表存储表示","aria-label":'Permalink to "树的双亲表存储表示"'},"​")],-1),i=e("p",null,[e("img",{src:r,alt:"普通树存储结构"})],-1),l=e("p",null,[t("采用顺序存储方式，如果有父元素则存储父元素下标。没有则存储"),e("code",null,"-1"),t("。")],-1),d=e("p",null,"例如：A父元素是R，R的下标是0",-1),p=e("p",null,[e("img",{src:n,alt:"双亲表示法存储普通树示意图"})],-1),u=[_,i,l,d,p];function h(m,f,g,x,k,N){return a(),o("div",null,u)}const B=s(c,[["render",h]]);export{b as __pageData,B as default};
