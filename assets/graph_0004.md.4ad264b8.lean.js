import{_ as t,o as a,c as s,k as e,a as o}from"./chunks/framework.91000686.js";const r="/data_structure/assets/2-220H41529315O.fea576f7.gif",$=JSON.parse('{"title":"图的邻接多重表存储表示","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"graph/0004.md","filePath":"graph/0004.md"}'),n={name:"graph/0004.md"},c=e("h1",{id:"图的邻接多重表存储表示",tabindex:"-1"},[o("图的邻接多重表存储表示 "),e("a",{class:"header-anchor",href:"#图的邻接多重表存储表示","aria-label":'Permalink to "图的邻接多重表存储表示"'},"​")],-1),i=e("p",null,"邻接多重表（Adjacency Multilist）是一种专门存储无向图（网）的结构。",-1),_=e("p",null,"邻接多重表存储无向图的方式，可以看作是邻接表和十字链表的结合体，具体来讲就是：将图中的所有顶点存储到顺序表（也可以用链表）中，同时为每个顶点配备一个链表，链表的各个结点中存储的都是和当前顶点有直接关联的边。",-1),d=e("p",null,[e("img",{src:r,alt:"img"})],-1),l=[c,i,_,d];function p(h,m,f,u,g,x){return a(),s("div",null,l)}const B=t(n,[["render",p]]);export{$ as __pageData,B as default};
